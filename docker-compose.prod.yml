version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: carrental_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: carrental_prod
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-secure_password_123}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      ENV: production
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - rabbitmq
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
